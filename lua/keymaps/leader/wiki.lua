-- WIKI CONFIG Local Leader KEYMAPS (,w) --

local M = {}

M.n ={ maps = { name = "+wiki",
    ["<SPACE>"] = { ":e ~/mk/index.md<CR>", "index" },
    ["<CR>"] = { ":e ~/mk/index.md<CR><ESC>:Telescope file_browser theme=dropdown path=~/mk<CR>", "file_browser"},
    ["_"] = { ":e ~/mk/index.md<CR><ESC>:Telescope file_browser theme=dropdown path=~/mk<CR>", "file_browser"},

    ["<TAB>"] = { ":e ~/mk/index.md<CR><ESC>:Telescope file_browser theme=dropdown path=~/mk<CR>", "file_browser"},

    [","] = { ":e ~/mk/index.md<CR><ESC>:Telescope find_files<CR>", "find_files"},
    ["."] = { ":e ~/mk/index.md<CR><ESC>:Telescope find_files<CR>", "find_files"},

    ["/"] = { "<CMD>Telescope wiki pages<CR>", "wiki pages"},
    ["?"] = { "<CMD>Telescope wiki grep<CR>", "wiki pages"},
    ["-"] = { "<CMD>Telescope wiki links<CR>", "wiki pages"},
    [";"] = { ":e ~/mk/index.md<CR><ESC>:Telescope live_grep<CR>", "live_grep"},
    ["\\"] = { ":e ~/mk/index.md<CR><ESC>:Telescope file_browser theme=dropdown path=~/mk<CR>", "file_browser"},
    P = { "<CMD>Telescope wiki pages<CR>", "wiki pages"},
    G = { "<CMD>Telescope wiki grep<CR>", "wiki pages"},
    L = { "<CMD>Telescope wiki links<CR>", "wiki pages"},
    f = { name = "+find",
      p = { "<CMD>Telescope wiki pages<CR>", "wiki pages"},
      g = { "<CMD>Telescope wiki grep<CR>", "wiki pages"},
      l = { "<CMD>Telescope wiki links<CR>", "wiki pages"},
    },
    c = { name = "+code",
	    ["<SPACE>"] = { ":e ~/mk/dev/index.md<CR>", "index" },
	    ["-"] = { ":e ~/mk/dev/index.md<CR><ESC>:Telescope find_files<CR>", "find_files"},
	    ["/"] = { ":e ~/mk/dev/index.md<CR><ESC>:Telescope live_grep<CR>", "live_grep"},
	    ["?"] = { ":e ~/mk/dev/index.md<CR><ESC>:Telescope fd<CR>", "fd"},
	    ["."] = { ":e ~/mk/dev/index.md<CR><ESC>:Telescope file_browser<CR>", "file_browser"},
        },
        i = { ":e ~/mk/index.md<CR>", "index"},
        j = { ":e ~/mk/journal.txt<CR>", "journal"},
        a = { ":e ~/mk/auth/index.md<CR>", "auth"},
        C = { ":e ~/mk/creds/index.md<CR>", "credentials"},
        V = { ":e ~/mk/idlets/index.md<CR>", "idlets"},
        I = { ":e ~/mk/devisa/index.md<CR>", "devisa"},
        x = { ":e ~/mk/dev/index.md<CR>", "dev"},
        J = { ":e ~/mk/jobs/index.md<CR>", "jobs"},
        l = { ":e ~/mk/diary/log/index.md<CR>", "log"},
        n = { ":JournalToday<CR>", "daily note"},
        N = { ":JournalTodayAlt<CR>", "daily note nested"},
        b = { name = "+bookmarks",
	    r = { ":e ~/mk/dev/bookmarks/rust/index.md<CR>", "rust"},
	    n = { ":e ~/mk/dev/bookmarks/nim/index.md<CR>", "nim"},
	    z = { ":e ~/mk/dev/bookmarks/zig/index.md<CR>", "zig"},
	    c = { ":e ~/mk/dev/bookmarks/ccPP/index.md<CR>", "c/c++"},
	    s = { ":e ~/mk/dev/bookmarks/sh/index.md<CR>", "sh"},
	    p = { ":e ~/mk/dev/bookmarks/py/index.md<CR>", "py"},
    },
    t = { "<CMD>edit ~/mk/todo.md<CR>", "global todo" },
    g = { "<CMD>edit ~/mk/goals.md<CR>", "global goals" },
    s = { name = "+snippets",
	["<SPACE>"] = { ":e ~/mk/dev/bookmarks/index.md<CR>", "general" },
	["<CR"]     = { name = "+new",
	    r = { ":e ~/mk/dev/snippets/rust/<CR>", "rust"},
	    n = { ":e ~/mk/dev/snippets/nim/<CR>", "nim"},
	    z = { ":e ~/mk/dev/snippets/zig/<CR>", "zig"},
	    c = { ":e ~/mk/dev/snippets/ccpp<CR>", "c/c++"},
	    s = { ":e ~/mk/dev/snippets/sh/<CR>", "sh"},
	    p = { ":e ~/mk/dev/snippets/py/<CR>", "sh"},
	},
	r = { ":e ~/mk/dev/snippets/rust/snippets/inde.md<CR>", "rust"},
	n = { ":e ~/wik/dev/snippets/nim/index.md<CR>", "nim"},
	z = { ":e ~/wik/dev/snippets/zig/index.md<CR>", "zig"},
	c = { ":e ~/mk/dev/snippets/ccpp/index.md<CR>", "c/c++"},
	s = { ":e ~/mk/dev/snippets/sh/index.md<CR>", "sh"},
	p = { ":e ~/mk/dev/snippets/sh/py.md<CR>", "sh"},
    },
    p = { name = "+projects",
	["<SPACE>"] = { ":e ~/mk/p/index.md<CR>", "index" },
	["I"] =       { ":e ~/mk/proj/idwplset/index.md.md<CR>", "index" },
        i = { ":e ~/mk/proj/ideas/index.md<CR>", "ideas" },
	p =           { ":e ~/mk/proj/index.md<CR>", "projs" }
    },
    d = { name = "+diary",
	["I"] = { ":VimwikiDiaryIndex<CR>", "index" },
	["<CR>"] = { ":VimwikiMakeDiaryNote<CR>", "daily note"},
	["<S-Tab>"] = { ":VimwikiYesterdayMakeDiaryNote<CR>", "yesterday note"},
	["<TAB>"] = { ":VimwikiTomorrowMakeDiaryNote<CR>", "tomorrow note"},
	["-"] = { ":e ~/mk/diary/diary/index.md CR><ESC>:Telescope fd", "find diary files"},
	["/"] = { ":e ~/mk/diary/diary/index.md CR><ESC>:Telescope find_files", "live grep"},
	["?"] = { ":e ~/mk/diary/diary/index.md CR><ESC>:Telescope find_files", "fd"},
	["["] = { ":VimwikiYesterdayMakeDiaryNote<CR>", "yesterday note"},
	["]"] = { ":VimwikiTomorrowMakeDiaryNote<CR>", "tomorrow note"},
	["<"] = { ":VimwikiYesterdayMakeDiaryNote<CR>", "yesterday note"},
	[">"] = { ":VimwikiTomorrowMakeDiaryNote<CR>", "tomorrow note"},
	[","] = { ":VimwikiDiaryPrevDay<CR>", "yesterday note"},
	["."] = { ":VimwikiTomorrowMakeDiaryNote<CR>", "tomorrow note"},
	j = {  ":JournalToday<CR>", 'journal today' },
	J = {  ":JournalTodayAlt<CR>", 'today nested' },
	M = { ":e ~/mk/templates/vimwiki/diary_entry.md<CR>", "diary template"},
	T = { ":e ~/mk/templates/diary.tpl<CR>", "diary template"},
	n = { ":VimwikiMakeDiaryNote<CR>", "daily note"},
  t = { name = "+templates", 
  },
	["<SPACE>"] = { ":e ~/mk/templates/index.md<CR>", "index" },
	b = { ":e ~/mk/templates/index.md<CR>", "index" },
	["<CR"]     = {name =  "+new",
	    r = { ":e ~/mk/teampltes/rust/inde.md<CR>", "rust"},
	    n = { ":e ~/mk/dev/nim/bookmarks/index.md<CR>", "nim"},
	    z = { ":e ~/mk/dev/zig/bookmarks/index.md<CR>", "zig"},
	    c = { ":e ~/mk/dev/ccpp/bookmarks/index.md<CR>", "c/c++"},
	    s = { ":e ~/mk/dev/sh/bookmarks/index.md<CR>", "sh"},
	},
	R = { ":e ~/mk/dev/rust/snippets/inde.md<CR>", "rust"},
	N = { ":e ~/mk/dev/nim/bookmarks/index.md<CR>", "nim"},
	Z = { ":e ~/mk/dev/zig/bookmarks/index.md<CR>", "zig"},
	c = { ":e ~/mk/dev/ccpp/bookmarks/index.md<CR>", "c/c++"},
	s = { ":e ~/mk/templats/sh/index.md<CR>", "sh"},
	v = { ":e ~/mk/templats/vimwiki/index.md<CR>", "vimwiki" },
	S = { ":e ~/mk/templats/svelte/index.md<CR>", "svelte" }
    },
},
    opts = require("keymaps.common").opts.n("w"), 
 }


M.v = {
    maps = M.n.maps,
    opts = require("keymaps.common").opts.v("w"),
}

return M
